efs-provisioner:
 efsProvisioner:
  efsFileSystemId:<FSIDHERE>
  awsRegion: ca-central-1
  storageClass:
   name: aws-efs-shib
jupyterhub:
 debug:
  enabled: true
 cull:
  enabled: true
  users: false
  timeout: 3600
  every: 600
  concurrency: 10
  maxAge: 0
 proxy:
  # `openssl rand -hex 32`
  secretToken: <SECRETTOKENHERE>
  service:
   type: ClusterIP
   annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: <CERTIFICATEARN>
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
  https:
   enabled: true
   type: offload
 hub:
  extraEnv:
   PROXY_PUBLIC_SERVICE_HOST: "proxy-public"
  db:
    type: sqlite-pvc
    pvc:
      storageClassName: gp2
  baseUrl: "/jupyter"
  extraConfig:
    00-auth-config: |
      # set() object needs special handling - not a string
      c.RemoteUserAuthenticator.shibValidEntitlements = set(['staff', 'student', 'faculty'])
  config:
    JupyterHub:
      authenticator_class: syzygyauthenticator.shib.RemoteUserAuthenticator
    RemoteUserAuthenticator:
      shibIDAttribute: 'REMOTE_USER'
      shibLogoutURL: '/Shibboleth.sso/Logout?return=https://authentication.stg.id.ubc.ca/idp/profile/Logout'
      shibUserEntitlements: 'eduPersonAffiliation'
 scheduling:
   userScheduler:
     enabled: true
   podPriority:
     enabled: true
   userPlaceholder:
     enabled: true
     replicas: 4
   userPods:
     nodeAffinity:
       matchNodePurpose: require
 singleuser:
  storage:
   dynamic:
    storageClass: aws-efs-shib
  image:
    name:  pimsubc/gpglabs-notebook
    tag: 'latest'
  memory: 
    limit: 2G
    guarantee: 512M
  cpu:
    limit: 1
    guarantee: .25
shib:
 name: k8s1.syzygy.farm
 redirects:
   - src: /startup
     dst: https://www.google.ca
 acm:
  arn: <CERTIFICATEARNHERE>
 spcert: |
  <SPCERTHERE>
 spkey: |
  <SPKEYHERE>
